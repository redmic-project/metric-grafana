version: '3.5'

services:
  grafana:
    image: ${IMAGE_NAME:-grafana/grafana}:${IMAGE_TAG:-latest}
    environment:
      GF_SERVER_ROOT_URL: ${TRAEFIK_PROTOCOL}://${TRAEFIK_SUBDOMAIN}.${PUBLIC_HOSTNAME}
      GF_PATHS_DATA:
      GF_PATHS_PROVISIONING:
      GF_INSTALL_PLUGINS:
      GF_SERVER_HTTP_PORT:
      GF_SERVER_ENABLE_GZIP:
      GF_SECURITY_ADMIN_USER:
      GF_SECURITY_ADMIN_PASSWORD:
      GF_USERS_ALLOW_SIGN_UP:
      GF_USERS_AUTO_ASSIGN_ORG:
      GF_USERS_AUTO_ASSIGN_ORG_ID:
      GF_USERS_AUTO_ASSIGN_ORG_ROLE:
      GF_SMTP_ENABLED:
      GF_SMTP_FROM_ADDRESS:
      GF_SMTP_FROM_NAME:
      GF_SMTP_HOST:
      GF_SMTP_SKIP_VERIFY:
      GF_SMTP_USER:
      GF_SMTP_PASSWORD:
      GF_LOG_MODE:
      GF_LOG_LEVEL:
      DASHBOARDS_PATH:
      PROMETHEUS_URL:
      ELASTICSEARCH_URL:
      ELASTICSEARCH_USER:
      ELASTICSEARCH_PASS:
    networks:
      metric-net:
      traefik-net:
    volumes:
      - data-vol:${GF_PATHS_DATA}
    configs:
      - source: datasources-config
        target: ${GF_PATHS_PROVISIONING}/datasources/datasources.yml
      - source: dashboards-providers-config
        target: ${GF_PATHS_PROVISIONING}/dashboards/dashboards_providers.yml
      - source: nodes-dashboard-config
        target: ${DASHBOARDS_PATH}/swarmprom-nodes.json
      - source: services-dashboard-config
        target: ${DASHBOARDS_PATH}/swarmprom-services.json
      - source: prometheus-dashboard-config
        target: ${DASHBOARDS_PATH}/swarmprom-prometheus.json
      - source: docker-dashboard-config
        target: ${DASHBOARDS_PATH}/docker.json
      - source: elasticsearch-fluentd-dashboard-config
        target: ${DASHBOARDS_PATH}/elasticsearch-fluentd.json
      - source: elasticsearch-dashboard-config
        target: ${DASHBOARDS_PATH}/elasticsearch.json
      - source: jvm-dashboard-config
        target: ${DASHBOARDS_PATH}/jvm.json
      - source: kafka-dashboard-config
        target: ${DASHBOARDS_PATH}/kafka.json
      - source: postgres-dashboard-config
        target: ${DASHBOARDS_PATH}/postgres.json
      - source: traefik-dashboard-config
        target: ${DASHBOARDS_PATH}/traefik.json
      - source: vernemq-dashboard-config
        target: ${DASHBOARDS_PATH}/vernemq.json
    deploy:
      mode: replicated
      replicas: ${REPLICAS:-1}
      labels:
        traefik.frontend.rule: Host:${TRAEFIK_SUBDOMAIN}.${PUBLIC_HOSTNAME}
        traefik.backend: grafana
        traefik.port: '${GF_SERVER_HTTP_PORT}'
      restart_policy:
        delay: ${RESTART_DELAY:-10s}
      update_config:
        delay: ${UPDATE_DELAY:-1m}
      resources:
        limits:
          cpus: '${RESOURCES_LIMITS_CPUS:-1}'
          memory: ${RESOURCES_LIMITS_MEMORY:-512M}
        reservations:
          cpus: '${RESOURCES_RESERVATIONS_CPUS:-0.001}'
          memory: ${RESOURCES_RESERVATIONS_MEMORY:-128M}

networks:
  metric-net:
    name: ${METRIC_NET_NAME:-metric-net}
    driver: ${METRIC_NET_DRIVER:-overlay}
    external: true

  traefik-net:
    name: ${TRAEFIK_NET_NAME:-traefik-net}
    driver: ${TRAEFIK_NET_DRIVER:-overlay}
    external: true

configs:
  datasources-config:
    name: ${DATASOURCES_CONFIG_NAME:-grafana-datasources}
    file: ./config/datasources.yml

  dashboards-providers-config:
    name: ${DASHBOARDS_PROVIDERS_CONFIG_NAME:-grafana-dashboards-providers}
    file: ./config/dashboards_providers.yml

  nodes-dashboard-config:
    name: ${NODES_DASHBOARD_CONFIG_NAME:-grafana-nodes-dashboard}
    file: ./config/dashboards/swarmprom-nodes.json

  services-dashboard-config:
    name: ${SERVICES_DASHBOARD_CONFIG_NAME:-grafana-services-dashboard}
    file: ./config/dashboards/swarmprom-services.json

  prometheus-dashboard-config:
    name: ${PROMETHEUS_DASHBOARD_CONFIG_NAME:-grafana-prometheus-dashboard}
    file: ./config/dashboards/swarmprom-prometheus.json

  docker-dashboard-config:
    name: ${DOCKER_DASHBOARD_CONFIG_NAME:-grafana-docker-dashboard}
    file: ./config/dashboards/docker.json

  elasticsearch-fluentd-dashboard-config:
    name: ${ELASTICSEARCH_FLUENTD_DASHBOARD_CONFIG_NAME:-grafana-elasticsearch-fluentd-dashboard}
    file: ./config/dashboards/elasticsearch-fluentd.json

  elasticsearch-dashboard-config:
    name: ${ELASTICSEARCH_DASHBOARD_CONFIG_NAME:-grafana-elasticsearch-dashboard}
    file: ./config/dashboards/elasticsearch.json

  jvm-dashboard-config:
    name: ${JVM_DASHBOARD_CONFIG_NAME:-grafana-jvm-dashboard}
    file: ./config/dashboards/jvm.json

  kafka-dashboard-config:
    name: ${KAFKA_DASHBOARD_CONFIG_NAME:-grafana-kafka-dashboard}
    file: ./config/dashboards/kafka.json

  postgres-dashboard-config:
    name: ${POSTGRES_DASHBOARD_CONFIG_NAME:-grafana-postgres-dashboard}
    file: ./config/dashboards/postgres.json

  traefik-dashboard-config:
    name: ${TRAEFIK_DASHBOARD_CONFIG_NAME:-grafana-traefik-dashboard}
    file: ./config/dashboards/traefik.json

  vernemq-dashboard-config:
    name: ${VERNEMQ_DASHBOARD_CONFIG_NAME:-grafana-vernemq-dashboard}
    file: ./config/dashboards/vernemq.json
